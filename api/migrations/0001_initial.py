# Generated by Django 3.2.6 on 2023-10-24 04:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('1', 'Концепция'), ('2', 'Руководство по использованию'), ('3', 'Описание кода backend'), ('4', 'Описание кода frontend'), ('5', 'Учебные материалы по организации сообщества'), ('6', 'Учебные материалы для программистов')], default='1', max_length=2)),
                ('name', models.CharField(max_length=150)),
                ('text', models.TextField(max_length=10000)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Carousel_room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, upload_to='rooms/main-rooms-covers')),
            ],
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('SC', 'Основной цвет сайта'), ('RN', 'Название комнаты'), ('AB', 'Блок с объявлением'), ('EMC', 'Цветная полоса рано утром'), ('MC', 'Цветная полоса утром'), ('DAC', 'Цветная полоса днем'), ('EC', 'Цветная полоса вечером'), ('SO', 'Активный вариант ответа'), ('VB', 'Кнопка отправки голоса'), ('violet', 'Фиолетовый'), ('d_blue', 'Темно-синий'), ('yellow', 'Желтый'), ('pink', 'Розовый'), ('red', 'Красный'), ('blue', 'Синий'), ('green', 'Зеленый'), ('gray', 'Серый'), ('cherry', 'Вишневый'), ('orange', 'Оранжевый')], default='RN', max_length=6)),
                ('text', models.CharField(blank=True, max_length=150)),
                ('is_palette', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Customization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('CN', 'Название сайта'), ('AN', 'Объявление'), ('RL', 'Правила'), ('SD', 'Описание сайта'), ('CT', 'Контакты')], default='AN', max_length=2)),
                ('text', models.CharField(blank=True, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='Illustration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('L', 'Логотип'), ('IN', 'Приглашение'), ('DA', 'Аватар по умолчанию'), ('DC', 'Обложка по умолчанию'), ('EP', 'Страница с ошибкой'), ('AP', 'Иллюстрация админ-панели'), ('GC', 'Иллюстрация в руководстве'), ('LP', 'Иллюстрация на странице входа'), ('RP', 'Иллюстрация для регистрации')], default='AP', max_length=2)),
                ('text', models.CharField(blank=True, max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('email', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=30)),
                ('avatar', models.ImageField(blank=True, upload_to='members/avatars')),
                ('cover', models.ImageField(blank=True, upload_to='members/covers')),
                ('post_text', models.CharField(blank=True, max_length=3000)),
                ('post_title', models.CharField(blank=True, max_length=50)),
                ('post_image', models.ImageField(blank=True, upload_to='members/postimgs')),
                ('post_created_at', models.DateTimeField(auto_now_add=True)),
                ('webcite', models.CharField(blank=True, max_length=60)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('email_confirm', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('color', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.color')),
                ('inviter', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inviter', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Smile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('file', models.ImageField(upload_to='customization/smiles/')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90)),
            ],
        ),
        migrations.CreateModel(
            name='Workplan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('P', 'В панели'), ('C', 'В коде')], default='P', max_length=1)),
                ('name', models.CharField(max_length=90)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(default=0)),
                ('start', models.CharField(max_length=30)),
                ('end', models.CharField(max_length=30)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Voice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.option')),
            ],
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('P', 'В панели'), ('C', 'В коде')], default='P', max_length=1)),
                ('name', models.CharField(max_length=90)),
                ('description', models.CharField(blank=True, max_length=500)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.IntegerField(default=0)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='RoomVoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.carousel_room')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(max_length=5000)),
                ('views', models.IntegerField(default=0)),
                ('cover', models.ImageField(blank=True, upload_to='rooms/covers')),
                ('type', models.CharField(choices=[('CMN', 'Общие'), ('ADM', 'Административные'), ('OFC', 'Служебные')], default='CMN', max_length=3)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='room_author', to='api.profile')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.color')),
                ('saved_by', models.ManyToManyField(blank='True', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank='True', to='api.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=1)),
                ('object', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_sender', to='api.profile')),
                ('violator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='violator', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('views', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('CMN', 'Общие'), ('ADM', 'Административные'), ('OFC', 'Служебные')], default='CMN', max_length=3)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='poll_author', to='api.profile')),
                ('saved_by', models.ManyToManyField(blank='True', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(blank='True', to='api.Tag')),
            ],
        ),
        migrations.AddField(
            model_name='option',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='api.poll'),
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=30, unique=True)),
                ('type', models.IntegerField(default=0)),
                ('info', models.CharField(blank=True, max_length=30)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=100)),
                ('type', models.IntegerField(default=0)),
                ('object', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('viewed', models.CharField(blank=True, max_length=200)),
                ('recipients', models.ManyToManyField(related_name='recipients', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Header_room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, upload_to='rooms/main-rooms-covers')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.room')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_author', to='api.profile')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.poll')),
            ],
        ),
        migrations.AddField(
            model_name='carousel_room',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.room'),
        ),
        migrations.CreateModel(
            name='ArticleIllustration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=150)),
                ('file', models.ImageField(blank=True, upload_to='illustrations')),
                ('article', models.ForeignKey(blank='True', default=None, on_delete=django.db.models.deletion.CASCADE, related_name='illustrations', to='api.article')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='updated_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=5000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('1', 'Нормальная'), ('2', 'Скрытая')], default='1', max_length=1)),
                ('author', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='room_answer_author', to='api.profile')),
                ('room', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.room')),
            ],
        ),
    ]
