from django.urls import path
from .views import UserView, ProfileView, RoomView, TagView, PollView, VoiceView, CommentView, SmileView, \
    AnswerView, ColorView, NotificationView, SearchView, CustomizationView, IllustrationView, OptionView, \
    ReportView, WorkplanView, UpdateView, RoomVoiceView, ArticleView, ArticleIllustrationView, StarWarsView

urlpatterns = [
    #members
    path('create-user', UserView.as_view({'post': 'create'})),
    path('get-user', UserView.as_view({'get': 'retrieve'})),
    path('get-member/<int:pk>', ProfileView.as_view({'get': 'retrieve'})),
    path('signin', UserView.as_view({'post': 'login'})),
    path('create-profile', ProfileView.as_view({'post': 'create'})),
    path('edit-profile', ProfileView.as_view({'post': 'update'})),
    path('get-my-profile', ProfileView.as_view({'get': 'retrieve_my_profile'})),
    path('block-profile', ProfileView.as_view({'post': 'block'})),
    path('get-blocked-profiles', ProfileView.as_view({'get': 'blocked_list'})),
    path('restore-member', ProfileView.as_view({'post': 'restore'})),
    path('get-moderators', ProfileView.as_view({'get': 'moderator_list'})),
    path('moderator-delete', ProfileView.as_view({'post': 'moderator_delete'})),
    path('add-moderator', ProfileView.as_view({'post': 'add_moderator'})),
    path('logout', UserView.as_view({'get': 'logout'})),
    path('send-confirm-email', UserView.as_view({'post': 'send_confirm_email'})),
    path('confirm-email', UserView.as_view({'post': 'register_confirm'})),
    path('change-email-query', UserView.as_view({'post': 'send_change_email_mail'})),
    path('change-email/<int:code>', UserView.as_view({'get': 'change_email'})),
    path('change-password/<int:code>', UserView.as_view({'post': 'change_password'})),
    path('change-password-email', UserView.as_view({'post': 'change_password_email'})),
    path('change-anonim-password-email', UserView.as_view({'post': 'change_anonim_password_email'})),
    #tag
    path('get-tags', TagView.as_view({'post': 'list'})),
    path('get-popular-tags', TagView.as_view({'get': 'popular_tag_list'})),
    #опросы
    path('get-polls', PollView.as_view({'post': 'list'})),
    path('delete-poll', PollView.as_view({'post': 'delete'})),
    path('get-poll/<int:pk>', PollView.as_view({'get': 'retrieve'})),
    path('save-poll/<int:pk>', PollView.as_view({'post': 'save_poll'})),
    path('is-poll-saved/<int:pk>', PollView.as_view({'get': 'is_poll_saved'})),
    path('is-my-voice/<int:pk>', PollView.as_view({'get': 'get_voice'})),
    path('get-voices/<int:poll_id>', VoiceView.as_view({'get': 'get_voices'})),
    path('send-voice', VoiceView.as_view({'post': 'create'})),
    path('comments/<int:poll_id>', CommentView.as_view({'get': 'retrieve'})),
    path('create-comment', CommentView.as_view({'post': 'create'})),
    path('delete-comment', CommentView.as_view({'post': 'delete'})),
    path('add-option', OptionView.as_view({'post': 'create'})),
    path('set-poll-view/<int:id>', PollView.as_view({'get': 'set_view'})),
    #кастомизация
    path('add-smile', SmileView.as_view({'post': 'create'})),
    path('delete-smile', SmileView.as_view({'post': 'delete'})),
    path('get-smiles', SmileView.as_view({'get': 'list'})),
    path('get-colors', ColorView.as_view({'get': 'list'})),
    path('get-illustrations', IllustrationView.as_view({'get': 'list'})),
    path('get-customization-settings', CustomizationView.as_view({'get': 'list'})),
    path('color-and-text-edit', CustomizationView.as_view({'post': 'edit'})),
    path('illustrations-edit', IllustrationView.as_view({'post': 'edit'})),
    path('get-announcement', CustomizationView.as_view({'get': 'announcement'})),
    path('get-citename', CustomizationView.as_view({'get': 'citename'})),
    path('get-logo', CustomizationView.as_view({'get': 'logo'})),
    #комнаты
    path('create-poll', PollView.as_view({'post': 'create'})),
    path('add-options', OptionView.as_view({'post': 'create'})),
    path('get-rooms', RoomView.as_view({'post': 'list'})),
    path('create-room', RoomView.as_view({'post': 'create'})),
    path('edit-room', RoomView.as_view({'post': 'edit'})),
    path('get-room/<int:id>', RoomView.as_view({'get': 'retrieve'})),
    path('set-room-view/<int:id>', RoomView.as_view({'get': 'set_view'})),
    path('get-answers', AnswerView.as_view({'post': 'list'})),
    path('create-answer', AnswerView.as_view({'post': 'create'})),
    path('edit-answer', AnswerView.as_view({'post': 'edit'})),
    path('delete-answer', AnswerView.as_view({'post': 'delete'})),
    path('get-answer/<int:id>', AnswerView.as_view({'get': 'retrieve'})),
    path('hide-answer', AnswerView.as_view({'post': 'hide_answer'})),
    path('restore-answer', AnswerView.as_view({'post': 'restore_answer'})),
    path('delete-room', RoomView.as_view({'post': 'delete'})),
    path('is-room-saved/<int:pk>', RoomView.as_view({'get': 'is_saved'})),
    path('save-room', RoomView.as_view({'post': 'save'})),
    path('save-main-room', RoomView.as_view({'post': 'save_main_room'})),
    path('get-carousel-rooms', RoomView.as_view({'get': 'carousel_room_list'})),
    path('get-header-rooms/<int:count>', RoomView.as_view({'get': 'header_room_list'})),
    path('get-room-voices/<int:room_id>', RoomVoiceView.as_view({'get': 'get_data'})),
    path('send-room-voice', RoomVoiceView.as_view({'post': 'add'})),
    path('get-new-rooms', RoomView.as_view({'get': 'new_rooms'})),
    #уведомления
    path('get-notifications', NotificationView.as_view({'get': 'list'})),
    path('add-notification', NotificationView.as_view({'post': 'create'})),
    path('is-new-notification', NotificationView.as_view({'get': 'get_new'})),
    path('show-new-notifs', NotificationView.as_view({'get': 'show_new_notifs'})),
    path('warning-exist', NotificationView.as_view({'post': 'warning_exist'})),
    path('delete-notification', NotificationView.as_view({'post': 'delete'})),
    #служебные
    path('add-report', ReportView.as_view({'post': 'create'})),
    path('get-reports', ReportView.as_view({'get': 'list'})),
    path('is-ability-to-block', NotificationView.as_view({'post': 'is_ability_to_block'})),
    path('get-workplan-list', WorkplanView.as_view({'get': 'list'})),
    path('add-workplan', WorkplanView.as_view({'post': 'create'})),
    path('edit-workplan', WorkplanView.as_view({'post': 'edit'})),
    path('delete-workplan-note', WorkplanView.as_view({'post': 'delete'})),
    path('send-workplan-grade', WorkplanView.as_view({'post': 'set_rating'})),
    path('get-update-list', UpdateView.as_view({'get': 'list'})),
    path('add-update', UpdateView.as_view({'post': 'create'})),
    path('edit-update', UpdateView.as_view({'post': 'edit'})),
    path('delete-update-note', UpdateView.as_view({'post': 'delete'})),
    path('send-update-grade', UpdateView.as_view({'post': 'set_rating'})),
    path('get-oficial-rooms', RoomView.as_view({'get': 'oficial_list'})),
    path('get-site-data', CustomizationView.as_view({'get': 'site_data'})),
    path('create-invite', ProfileView.as_view({'post': 'get_invite_code'})),
    path('compare-code', ProfileView.as_view({'post': 'compare_invite_code'})),
    #поиск
    path('get-search-items', SearchView.as_view({'post': 'list'})),
    #руководство
    path('get-guide-articles/<int:section_id>', ArticleView.as_view({'get': 'list'})),
    path('edit-article', ArticleView.as_view({'post': 'edit'})),
    path('create-article-image', ArticleIllustrationView.as_view({'post': 'create'})),
    path('get-article-image/<int:id>', ArticleIllustrationView.as_view({'get': 'retrieve'})),
    path('remove-article-image', ArticleIllustrationView.as_view({'post': 'delete'})),
    path('guide-search', ArticleView.as_view({'post': 'search'})),
    #звездные войны
    path('get-star-wars-voices', StarWarsView.as_view({'get': 'retrieve'})),
    path('send-star-wars-voice', StarWarsView.as_view({'post': 'add'})),
]